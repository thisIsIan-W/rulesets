name: Manage Release

on:
  push:
    branches:
      - main  # 监控的分支，可以修改为其他分支

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          # 下载并安装 GitHub CLI
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Configure GitHub CLI
        run: |
          # 配置 GitHub CLI 使用 GITHUB_TOKEN 进行身份验证
          gh auth setup-git
          gh auth status

      - name: Delete old release and tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="${{ github.repository }}"

          # 删除旧的名为 'release' 的 release
          if gh release view release --repo $REPO &>/dev/null; then
            echo "Deleting existing release named 'release'"
            gh release delete release -y --repo $REPO || echo "Failed to delete release 'release'"
          else
            echo "No release named 'release' found"
          fi

          # 删除本地标签
          if git show-ref --tags | grep -q 'refs/tags/release'; then
            echo "Deleting local tag 'release'"
            git tag -d release || echo "Failed to delete local tag 'release'"
          else
            echo "No local tag named 'release' found"
          fi

          # 删除远程标签
          if git ls-remote --tags origin | grep -q 'refs/tags/release'; then
            echo "Deleting remote tag 'release'"
            git push origin :refs/tags/release || echo "Failed to delete remote tag 'release'"
          else
            echo "No remote tag named 'release' found"
          fi

      - name: Create new tag
        run: |
          echo "Creating new tag 'release'"
          git tag release
          git push origin release

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create release --title "release" --notes "Automated release for tag 'release'" --repo $REPO
